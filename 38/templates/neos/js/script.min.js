'use strict';

(function () {

	var MS_IN_S = 1000;

	window.util = {
		showSystemModal: function (text) {
			$('#systemModal .name-modal').html(text);
			$('#systemModal').modal('show');
		},
		modalIsOpen: function () {
			'use strict';
			if ($('.modal.in').length > 0) {
				return true;
			}
			return false;
		},
		splitByNumericOrder: function (str) {
			'use strict';
			str = String(str);
			var out = str.replace(/(\d)(?=(\d\d\d)+([^\d]|$))/g, '$1 ');
			return out;
		},
		realWidth: function (obj) {
			var $itemClone = obj.clone().css({
				'visibility': 'hidden',
				'position': 'absolute',
				'z-index': '-99999',
				'left': '99999999px',
				'top': '0px'
			}).appendTo('body');
			var width = $itemClone.width();
			$itemClone.remove();
			return width;
		},
		getTransitionDuration: function(element) {
			var transitionDuration = element.css('transition-duration').replace('s', '');
			transitionDuration = parseFloat(transitionDuration)*MS_IN_S;
			return transitionDuration;
		}
	};

})();
'use strict';

(function () {

	window.main = {};
	
	$('.catalog').on('click', '.add-favorite', function (e) {
		e.preventDefault();
		var name = $(this).closest('.catalog-item').find('.catalog-item__name').html();
		var src = $(this).closest('.catalog-item').find('.catalog-item__img').css('background-image');
		src = src.replace('url(', '').replace(')', '').replace(/"/gi, '');
		var product_id = $(this).closest('.catalog-product__item').data('productId');
		var category_id = $(this).closest('.catalog-product__item').data('categoryId');
		window.pages.catalog.addToFavorite(name, src, product_id, category_id);
	});

})();
var ENTER_KEY_CODE = 13;

$('form').on('submit', function (evt) {
	'use strict';
	var form = $(this);
	window.validate.form.checkForm(evt, form);
});

// FIO REGISTRATION START

//  family name patronomyc //
var name_client = {
	family_name: '',
	name: '',
	patronymic: ''
};

function check_data_input(str) {
	'use strict';
	var res = str.split(' ');
	var i = 0;
	var family_reg = /(ов$|ев$|ёв$|их$|ых$|ин$|ын$|ой$|цкий$|ский$|ских$|цкой$|ской$|цкий$|ова$|ева$|ина$|ая$|яя$|екая$|цкая$)/ig;
	var patronymic_reg = /(вна$|вич$|ич$|-оглы$|-кызы$)/gi;
	for (i = 0; i < res.length; i += 1) {
		if (res[i].search(patronymic_reg) > -1) {
			name_client.patronymic = res[i];
		} else if (res[i].search(family_reg) > -1) {
			if (res[i] === 'Екатерина' || res[i] === 'Валентина' || res[i] === 'Валентин' || res[i] === 'Алина' || res[i] === 'Ирина' || res[i] === 'Карина' || res[i] === 'Галина' || res[i] === 'Марина' || res[i] === 'Константин') {
				name_client.name = res[i];
			} else {
				name_client.family_name = res[i];
			}
		} else if (res[i].search(patronymic_reg) === -1 && res[i].search(family_reg) === -1) {
			name_client.name = res[i];
		}
	}
	$('#f_name').val(name_client.name);
	$('#l_name').val(name_client.family_name);
	$('#m_name').val(name_client.patronymic);
}

var count_submit_send = 0; //Количество попыток отправить форму

function change_fio_form() {
	$('#changeFamily').modal('show');
	$('#family_solo').val(name_client.family_name);
	$('#name_solo').val(name_client.name);
	$('#patronymic_solo').val(name_client.patronymic);
}

$('#fio_name').keyup(function (e) {
	'use strict';
	if (e.keyCode === ENTER_KEY_CODE) {
		count_submit_send += 1;
		$('.registration__button').click();
	} else {
		count_submit_send = 0;
	}
});
var modalChangeFamily = false;
$('#save-address, .registration__button').on('click', function (e) {
	'use strict';
	var _this = $(this);
	var form = _this.closest('form');
	if ($('input[name = "confirmed-user"]').length !== 0) {
		var fioIsVerified = $('input[name = "confirmed-user"]').val();
		if(fioIsVerified === '1') {
			modalChangeFamily = true;
		}
	}
	if (!modalChangeFamily) {
		//  Удалим старые значения
		delete name_client.family_name;
		delete name_client.name;
		delete name_client.patronymic;
		//  Проверка введённых данных
		var str = $('#fio_name').val().trim();
		check_data_input(str);
		// Поведение при неверных данных
		if (name_client.family_name === undefined || name_client.family_name === '' || name_client.name === undefined || name_client.name === '' || name_client.patronymic === undefined || name_client.patronymic === '') {
			$('#fio_name').addClass('error');
			count_submit_send++;
			if (count_submit_send > 0) {
				change_fio_form();
			}
		} else { //  Поведение, если скрипт успешен
			$('#fio_name').removeClass('error');
		}
	}
	// для оформления заказа и страницы изменения информации этот блок кода не нужен
	if ($('.cart-page').length === 0 && $('.user-cabinet').length === 0) {
		window.setTimeout(function () {
			if ($('.modal.in').length === 0 && !$('input#politic-confidence').prop('checked')) {
				window.util.showSystemModal('Вы не поставили галочку, что согласны с условиями конфиденциальности');
			}
		}, 1000);
	}

	window.validate.form.checkForm(e, form);
});

$('#fio_name').on('change', function () {
	modalChangeFamily = false;
	if ($('input[name = "confirmed-user"]').length !== 0) {
		$('input[name = "confirmed-user"]').val('0');
	}
});
//  MODAL ALERT FULL NAME //

$('#changeFamily .btn_submit').on('click', function (evt) {
	var form = $('#changeFamily form');
	window.validate.form.checkForm(evt, form);
	if (!$('.input-text--modal').hasClass('error')) {
		name_client.family_name = $('#family_solo').val();
		name_client.name = $('#name_solo').val();
		name_client.patronymic = $('#patronymic_solo').val();
		$('#f_name').val(name_client.name);
		$('#l_name').val(name_client.family_name);
		$('#m_name').val(name_client.patronymic);
		$('#fio_name').val(name_client.family_name + ' ' + name_client.name + ' ' + name_client.patronymic);
		$('#fio_name').removeClass('error');
		modalChangeFamily = true;
		$('#changeFamily').modal('hide');
		$('.registration__button').trigger('click');
	}
});
'use strict';

(function () {

	$('.nav__item').on('click', function () {
		'use strict';
		var href = $(this).find('.nav__link').attr('href');
		var menu = $(this).find('.nav__dropdown').find('.nav__menu');
		var target = $(this).find('.nav__dropdown');
		var _this = $(this);
		if (href == undefined || href == 'undefined' || href == null) {
			if ($(this).hasClass('nav__item--active')) {
				menu.css('opacity', 0);
				window.TweenLite.to(target, 0.4, {
					height: 0,
					ease: window.Expo.easeInOut
				});
				setTimeout(function () {
					target.css('display', 'none');
				}, 400);
				setTimeout(function () {
					_this.removeClass('nav__item--active');
				}, 100);
			} else {
				$(this).parent().find('.nav__item--active').find('.nav__dropdown').slideUp(100);
				$(this).parent().find('.nav__item').removeClass('nav__item--active');
				$(this).find('.nav__dropdown').slideUp(0);
				menu.css('opacity', 0);
				$(this).addClass('nav__item--active');
				target.css('height', 0);
				target.css('display', 'block');
				var heightMenu = menu.outerHeight(true);
				window.TweenLite.to(target, 0.3, {
					height: heightMenu,
					ease: window.Expo.easeOut
				});
				window.TweenLite.to(menu, 0.15, {
					opacity: 1,
					ease: window.Expo.easeInOut
				});
			}
		}
	});

	//          MENU MOBILE PAGE START          //

	window.main.menu = {
		menuIsOpen: false
	};

	function openMenu() {
		window.main.menu.menuIsOpen = true;
		$('.menu__button').addClass('active');
		$('.nav').addClass('active');
		$('.nav__list').addClass('active');
		var height = $(window).height();
		window.TweenLite.set($('.nav__list'), {
			y: -height
		});
		window.TweenLite.to($('.nav__list'), 0.6, {
			y: 0,
			ease: window.Power1.easeOut
		});
		setTimeout(function () {
			$('.nav__list').css('transform', 'none');
			window.main.menu.menuIsOpen = false;
		}, 1000);
		$('.nav__input').slideUp(300);
		$('body').addClass('menu--is-open');
	}

	function closeMenu(time) {
		window.main.menu.menuIsOpen = true;
		$('.menu__button').removeClass('active');
		$('.nav').removeClass('active');
		var height = $(window).height();
		window.TweenLite.set($('.nav__list'), {
			y: 0
		});
		window.TweenLite.to($('.nav__list'), 0.6, {
			y: -height,
			ease: window.Power1.easeOut
		});
		$('.nav__item--active').trigger('click');
		setTimeout(function () {
			$('.nav__list').removeClass('active');
			$('body').removeClass('menu--is-open');
			$('.nav__list').css('transform', 'none');
			window.main.menu.menuIsOpen = false;
		}, time);
	}
	$('.menu__button').on('click', function () {
		if (!window.main.menu.menuIsOpen) {
			$('.search').removeClass('active');
			if ($(this).hasClass('active')) {
				closeMenu(1000);
			} else {
				openMenu();
			}
		}
	});

	$('.search').on('click', function () {
		closeMenu(1000);
		if ($(this).hasClass('active')) {
			$(this).removeClass('active');
			$('.nav__input').slideUp(300);
		} else {
			$('.nav__input').slideDown(300);
			$(this).addClass('active');
			$('.nav__input').focus();
		}
	});
	$('.nav__input').on('click', function () {
		if ($(this).hasClass('nav__input')) {
			return false;
		}
	});

	//          MENU MOBILE PAGE END          //


})();
'use strict';

(function () {

	window.main.map = {
		goToAddress: function (cityDeliveryName, streetDelivery, houseDelivery) {
			if (window.orderMap) {
				var zoomMaps = 10;
				if (streetDelivery !== '') {
					zoomMaps = 16;
				}
				if (houseDelivery !== '') {
					zoomMaps = 18;
				}
				var myGeocoder = window.ymaps.geocode(cityDeliveryName + ' ' + streetDelivery + ' ' + houseDelivery);
				myGeocoder.then(
					function (res) {
						var coordinates = res.geoObjects.properties._data.metaDataProperty.GeocoderResponseMetaData.Point.coordinates;
						window.orderMap.panTo(
							[coordinates[1], coordinates[0]], {
								flying: true
							}
						).then(function () {
							window.orderMap.setZoom(zoomMaps);
						});
					},
					function (err) {
						window.util.showSystemModal(err);
					}
				);
			}
		},
		initYmap: function () {
			var myPlacemark, myMap = new window.ymaps.Map('map', {
				center: [55.953994, 92.732612],
				zoom: 9
			}, {
				searchControlProvider: 'yandex#search'
			});

			// Слушаем клик на карте.
			myMap.events.add('click', function (e) {
				var coords = e.get('coords');

				// Если метка уже создана – просто передвигаем ее.
				if (myPlacemark) {
					myPlacemark.geometry.setCoordinates(coords);
				}
				// Если нет – создаем.
				else {
					myPlacemark = createPlacemark(coords);
					myMap.geoObjects.add(myPlacemark);
					// Слушаем событие окончания перетаскивания на метке.
					myPlacemark.events.add('dragend', function () {
						getAddress(myPlacemark.geometry.getCoordinates());
					});
				}
				getAddress(coords);
			});

			// Создание метки.
			function createPlacemark(coords) {
				return new window.ymaps.Placemark(coords, {
					iconCaption: 'поиск...'
				}, {
					preset: 'islands#violetDotIconWithCaption',
					draggable: true
				});
			}

			// Определяем адрес по координатам (обратное геокодирование).
			function getAddress(coords) {
				myPlacemark.properties.set('iconCaption', 'поиск...');
				window.ymaps.geocode(coords).then(function (res) {
					var firstGeoObject = res.geoObjects.get(0);

					myPlacemark.properties
						.set({
							// Формируем строку с данными об объекте.
							iconCaption: [
								// Название населенного пункта или вышестоящее административно-территориальное образование.
								firstGeoObject.getLocalities().length ? firstGeoObject.getLocalities() : firstGeoObject.getAdministrativeAreas(),
								// Получаем путь до топонима, если метод вернул null, запрашиваем наименование здания.
								firstGeoObject.getThoroughfare() || firstGeoObject.getPremise()
							].filter(Boolean).join(', '),
							// В качестве контента балуна задаем строку с адресом объекта.
							balloonContent: firstGeoObject.getAddressLine()
						});
					var address = firstGeoObject.properties._data.metaDataProperty.GeocoderMetaData.Address.Components;
					var geoDataLength = address.length;
					var geoData = {};
					for (var i = 0; i < geoDataLength; i++) {
						geoData[address[i].kind] = address[i].name;
					}
					var city = geoData.locality;
					var province = geoData.province;
					if (city !== undefined && city !== null && city !== 'undefined' && province !== undefined && province !== 'undefined' && province !== null) {
						$.ajax({
							type: 'GET',
							url: 'http://' + window.location.host + '/?option=com_jshopping&view=estimate&task=yandexLocation&city=' + city + '&province=' + province,
							success: function (data) {
								var json = JSON.parse(data);
								var optionData = {
									id: json.id,
									text: json.np_name
								};
								$('#city-estimate').val(null).trigger('change');
								$('#city-estimate-drop').val(null).trigger('change');
								$('#city-estimate option, #city-estimate-drop option').each(function () {
									$(this).remove();
								});
								var option = $('#city-estimate option[value=' + optionData.id + ']');
								var optionExist = option.length;
								if (optionExist < 1) {
									var newOption = new Option(optionData.text, optionData.text, false, true);
									$('#city-estimate').append(newOption).trigger('change');
									$('#city-estimate-drop').append(newOption).trigger('change');
								} else {
									option.prop('selected', true);
									$('#city-estimate').trigger('change');
									$('#city-estimate-drop').trigger('change');
								}
								$('input[name="city_id"]').val(optionData.id);
								$('input[name="d_city_id"]').val(optionData.id);
							},
							error: function (thrownError) {
								window.util.showSystemModal(thrownError);
							}
						});
					}
					var street = geoData.street;
					if (street == undefined || street == null || street == 'undefined') {
						$('#addres-street').val('');
					} else {
						$('#addres-street').val(street);
					}
					var house = geoData.house;
					if (house == undefined || house == null || house == 'undefined') {
						$('#addres-street-number').val('');
					} else {
						$('#addres-street-number').val(house);
					}
					$('#apartment').focus();
				});
			}
			window.orderMap = myMap;
			var cityDeliveryName = '';
			if ($('#city-estimate').length !== 0) {
				cityDeliveryName = $('#city-estimate').val()[0];
			} else {
				cityDeliveryName = $('#city-estimate-drop').val()[0];
			}
			var streetDelivery = $('#addres-street').val();
			var houseDelivery = $('#addres-street-number').val();
			window.main.map.goToAddress(cityDeliveryName, streetDelivery, houseDelivery);
		}

	};

	$(document).ready(function () {
		if ($('.cart-page .cart-page__maps').length !== 0) {
			window.ymaps.ready(window.main.map.initYmap);
		}
	});

})();
'use strict';

(function () {

	var url = '';
	var origin = window.location.origin + '/';

	window.main.Share = {
		vkontakte: function (purl, ptitle, pimg, text) {
			url = 'http://vk.com/share.php?';
			url += 'url=' + encodeURIComponent(origin + purl);
			url += '&title=' + encodeURIComponent(ptitle);
			url += '&description=' + encodeURIComponent(text);
			url += '&image=' + encodeURIComponent(origin + pimg);
			url += '&noparse=true';
			window.main.Share.popup(url);
		},
		odnoklassniki: function (purl, ptitle, pimg, text) {
			url  = 'https://connect.ok.ru/offer';
			url += '?url='    + encodeURIComponent(origin + purl);
			url += '&title=' + encodeURIComponent(ptitle);
			url += '&description=' + encodeURIComponent(text);
			url += '&imageUrl=' + encodeURIComponent(origin + pimg);
			window.main.Share.popup(url);
		},
		popup: function (url) {
			window.open(url, '', 'toolbar=0,status=0,width=626,height=436');
		}
	};

})();
'use strict';

(function () {

	window.main.scroll = {
		blockForCustomScroll: null,
		mCustomScrollValue: null,
		initCustomScroll: function () {
			$('.filter__container--scroll').each(function() {
				new window.SimpleBar($(this)[0], { autoHide: false });
			});
			if(window.main.scroll.blockForCustomScroll) {
				$('#' + window.main.scroll.blockForCustomScroll).find('.simplebar-scroll-content')[0].scrollTop = parseFloat(window.main.scroll.mCustomScrollValue);
			}
		},
		scrollContentTop: function () {
			if ($('.catalog-container').length > 0) {
				var offset = 0,
					page = $('html, body');
				$('.catalog-product').css({
					height: $('.catalog-product').height() + 'px'
				});
				if (offset < $(window).scrollTop()) {
					setTimeout(function () {
						page.on('scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove', function () {
							page.stop();
							page.off('scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove');
							$('.catalog-product').removeAttr('style');
						});
						page.animate({
							scrollTop: offset
						}, 2000, function () {
							page.off('scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove');
							$('.catalog-product').removeAttr('style');
						});
					}, 50);
				} else {
					$('.catalog-product').removeAttr('style');
				}
			}
		}
	};
})();
'use strict';

(function () {

	$('#estimate, #city-estimate, #city-estimate-drop').select2({
		width: 'element',
		placeholder: 'Введите название города',
		minimumInputLength: 3,
		multiple: true,
		maximumSelectionLength: 1,
		maximumSelectionSize: 1,
		ajax: {
			url: 'http://' + window.location.host + '/?option=com_jshopping',
			data: function (params) {
				return {
					view: 'estimate',
					task: 'autocomplete',
					city: params.term
				};
			},
			dataType: 'json',
			delay: 250,
			processResults: function (data) {
				var dataResult = $.map(data, function (item) {
					return {
						id: item.id,
						text: item.np_name
					};
				});
				return {
					results: dataResult
				};
			},
			error: function (xhr, thrownError) {
				if (xhr.status !== 0) { // FOR CANCELLED STATUS
					window.util.showSystemModal(thrownError);
				}
			},
			cache: true
		}
	});

	$('#estimate, #city-estimate, #city-estimate-drop').on('select2:open', function () {
		//  HACK FOR DROPDOWN POSITION FIX
		var y = $(window).scrollTop();
		$(window).scrollTop(y + 1);

		// clear select on input new city
		$('.select2-search__field').on('keyup', function () {
			$('#estimate, #city-estimate, #city-estimate-drop').val('').trigger('change');
			$('#estimate, #city-estimate, #city-estimate-drop').find('option').each(function () {
				$(this).remove();
			});
		});

	});

	$('#estimate').on('select2:select', function () {
		var selectOption = $(this).val();
		if ($('.table--delivery').length !== 0) {
			$.ajax({
				beforeSend: function () {
					$('.table--delivery').css('min-height', '350px');
					$('.user-cabinet').addClass('is-load');
					$('.preloader').addClass('loader calculate-loader');
				},
				complete: function () {
					$('.user-cabinet').removeClass('is-load');
					$('.preloader').removeClass('loader calculate-loader');
				},
				type: 'POST',
				url: 'http://' + window.location.host + '/?option=com_jshopping&view=estimate&task=calc&city_id=' + selectOption[0] + '&ajax=1',
				success: function (data) {
					$('.table--delivery').html(data);
				},
				error: function (thrownError) {
					window.util.showSystemModal(thrownError);
				}
			});
		}
	});


	$('select[name="address_id"]').select2({
		width: 'element',
		minimumResultsForSearch: -1,
		placeholder: 'Выберите адрес'
	});

	$('select[name="address_id"]').on('select2:select', function () {
		var selectOption = $('select[name="address_id"] option:selected');
		var cityId = selectOption.data('city-id');
		$('input[name="d_city_id"]').val(cityId);
	});

	$('#city-estimate, #city-estimate-drop').on('select2:select', function () {
		var selectOption;
		var selectOptionId = $(this).val();
		if ($(this).attr('id') === 'city-estimate') {
			selectOption = $('#city-estimate option:selected');
			$('input[name="city_id"]').val(selectOptionId);
		} else {
			selectOption = $('#city-estimate-drop option:selected');
			$('input[name="d_city_id"]').val(selectOptionId);
		}
		var cityDeliveryName = selectOption.text();
		selectOption.val(cityDeliveryName).trigger('change');
		var streetDelivery = $('#addres-street').val();
		var houseDelivery = $('#addres-street-number').val();
		window.main.map.goToAddress(cityDeliveryName, streetDelivery, houseDelivery);
	});

})();
'use strict';

(function () {
	var supportsCSS = !!((window.CSS && window.CSS.supports) || window.supportsCSS || false);

	window.main.support = {
		flex: function () {
			if (supportsCSS === true) {
				$('body').addClass('flex-support');
			}
		}
	};

	window.main.support.flex();

})();
'use strict';

(function () {

	window.main.inputAddress = {};
	window.main.inputAddress.timeoutForInput = 1000;
	window.main.inputAddress.timerForAddress = setTimeout(function () {}, window.main.inputAddress.timeoutForInput);
	$('#addres-street, #addres-street-number').on('input', function () {
		clearTimeout(window.main.inputAddress.timerForAddress);
		var citySelectData;
		if ($('#city-estimate').length == 0) {
			citySelectData = $('#city-estimate-drop').select2('data');
		} else {
			citySelectData = $('#city-estimate').select2('data');
		}
		var cityDeliveryName = citySelectData[0].text;
		var streetDelivery = $('#addres-street').val();
		var houseDelivery = $('#addres-street-number').val();
		window.main.inputAddress.timerForAddress = setTimeout(function () {
			window.main.map.goToAddress(cityDeliveryName, streetDelivery, houseDelivery);
		}, window.main.inputAddress.timeoutForInput);
	});

})();
'use strict';

(function () {

	window.main.lightGallery = {};
	window.main.lightGallery.calculatePrevArrowLightGallery = function() {
		var offset = $('.lg-current img.lg-object.lg-image').offset();
		var left = offset.left;
		$('.lg-actions .lg-prev').css('left', left);
		setTimeout(function () {
			$('.lg-actions .lg-prev').css('opacity', '1');
		}, 600);
	};
	window.main.lightGallery.calculateNextArrowLightGallery = function() {
		var widthButton = 68;
		var offset = $('.lg-current img.lg-object.lg-image').offset();
		var width = $('.lg-current img.lg-object.lg-image').width();
		var left = offset.left + width - widthButton;
		$('.lg-actions .lg-next').css('left', left);
		setTimeout(function () {
			$('.lg-actions .lg-next').css('opacity', '1');
		}, 600);
	};
	window.main.lightGallery.calculatreCloseButtonLightGallery = function() {
		$('.lg-toolbar .lg-close').html('Закрыть');
		var top = $('.lg-current img.lg-object.lg-image').offset().top - $(window).scrollTop();
		$('.lg-toolbar .lg-close').css('top', top);

		var offset = $('.lg-current img.lg-object.lg-image').offset();
		var left = offset.left;
		$('.lg-toolbar .lg-close').css('left', -(left));
		setTimeout(function () {
			$('.lg-toolbar .lg-close').css('opacity', '1');
		}, 600);
	};

})();
'use strict';

(function () {
	window.validate = {};
})();
'use strict';

(function () {
	var minLengthPass = 4;
	var maxLengthPass = 20;

	window.validate.main = {
		MESSAGE_ERROR: {
			REQUIRED: 'Не все обязательные поля заполнены. ',
			DEFAULT: ' Некоторые поля заполнены с ошибкой. ',
			MAIL: ' Поле ввода e-mail заполнено неверно. ',
			PHONE: ' Поле ввода номера телефона заполнено неверно. ',
			CAPTCHA: 'Капча введена неверно, либо время проверки истекло',
			PASS: 'Длина пароля должна быть от ' + minLengthPass + ' до ' + maxLengthPass + ' символов'
		},
		PATTERN_VALIDATE: {
			EMAIL: /.+@.+\..+/i,
			PHONE: /^([+]?[0-9\s-\(\)]{3,25})*$/i,
			ADDRESS: /[А-Яа-я0-9;]/ig,
			LINK_VK: /(https?:\/\/)?(www\.)?(m\.)?vk\.com\/+/i,
			URL: /^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/
		},
		comparePass: function (pass1, pass2) {
			'use strict';
			var pass = pass1.val();
			var pass_repeat = pass2.val();
			if (pass !== pass_repeat) {
				pass1.addClass('error');
				pass2.addClass('error');
			} else {
				pass1.removeClass('error');
				pass2.removeClass('error');
			}
		},
		checkLengthPass: function (elem) {
			'use strict';
			var elemLength = elem.val().length;
			if (elemLength < minLengthPass) {
				elem.addClass('error');
				window.util.showSystemModal(window.validate.main.MESSAGE_ERROR.PASS);
			} else if (elemLength > maxLengthPass) {
				elem.addClass('error');
				window.util.showSystemModal(window.validate.main.MESSAGE_ERROR.PASS);
			} else {
				elem.removeClass('error');
			}
		},
		validateViaPattern: function (elem, pattern) {
			'use strict';
			var valueElement = elem.val().trim();
			var isRequired = elem.prop('required');
			var isEmpty = valueElement.length === 0;
			if (elem.length === 0) {
				return false;
			}
			if (isRequired || (!isRequired && !isEmpty)) {
				if (elem.val().search(pattern) === 0) {
					elem.removeClass('error');
				} else {
					elem.addClass('error');
				}
			} else if (!isRequired && isEmpty) {
				return false;
			}
		}
	};

})();
'use strict';

(function () {

	$('.input-text').on('focus', function () {
		$(this).removeClass('error');
	});

	$('.input--mail').on('blur', function () {
		window.validate.main.validateViaPattern($(this), window.validate.main.PATTERN_VALIDATE.EMAIL);
	});

	$('.input--phone').on('blur', function () {
		window.validate.main.validateViaPattern($(this), window.validate.main.PATTERN_VALIDATE.PHONE);
	});

	$('.input--address').on('blur', function () {
		window.validate.main.validateViaPattern($(this), window.validate.main.PATTERN_VALIDATE.ADDRESS);
	});

	$('.input--link').on('blur', function () {
		window.validate.main.validateViaPattern($(this), window.validate.main.PATTERN_VALIDATE.LINK_VK);
	});

	$('.input--url').on('blur', function () {
		window.validate.main.validateViaPattern($(this), window.validate.main.PATTERN_VALIDATE.URL);
	});

	$('input[type="password"]').on('blur', function () {
		window.validate.main.checkLengthPass($(this));
	});

	$('#user-pass,#user-pass-repeat').on('blur', function () {
		window.validate.main.comparePass($('#user-pass'), $('#user-pass-repeat'));
	});

	$('#user-new-pass,#user-new-pass-repeat').on('blur', function () {
		window.validate.main.comparePass($('#user-new-pass'), $('#user-new-pass-repeat'));
	});

})();
'use strict';

(function () {

	var checkInputError = function (evt, elem) {
		'use strict';
		var form = elem;
		var countErrorInput = 0;
		var strError = '';
		form.find('input').each(function () {
			if ($(this).hasClass('error')) {
				countErrorInput += 1;
				if ($(this).hasClass('input--mail') || $(this).attr('name') === 'email') {
					strError += window.validate.main.MESSAGE_ERROR.MAIL;
				}
				if ($(this).hasClass('input--phone') || $(this).attr('name') === 'phone') {
					strError += window.validate.main.MESSAGE_ERROR.PHONE;
				}
			}
		});
		if (countErrorInput > 0) {
			evt.preventDefault();
			if (strError === '') {
				strError += window.validate.main.MESSAGE_ERROR.DEFAULT;
			}
		}
		return strError;
	};

	var checkInputRequired = function (evt, elem) {
		'use strict';
		var form = elem;
		var countRequiredField = 0;
		var strRequired = '';
		form.find('input:required,textarea:required,select:required').each(function () {
			if ($(this).val() === '') {
				$(this).addClass('error');
				countRequiredField += 1;
			}
		});
		if (countRequiredField > 0) {
			evt.preventDefault();
			strRequired += window.validate.main.MESSAGE_ERROR.REQUIRED;
		}
		return strRequired;
	};

	var checkNeedValidate = function (form) {
		'use strict';
		var needValidate = true;
		var expandInputFormVisible = $('#div_delivery').css('display');
		if (form.attr('name') === 'dropFormAddress' && expandInputFormVisible === 'none') {
			needValidate = false;
		}
		return needValidate;
	};

	var checkCaptcha = function () {
		var strError = '';
		if ($('.g-recaptcha').length !== 0) {
			var key = $('#g-recaptcha-response').val().trim();
			if (key === '') {
				strError += window.validate.main.MESSAGE_ERROR.CAPTCHA;
			}
		}
		return strError;
	};

	window.validate.form = {
		checkForm: function (evt, form) {
			'use strict';
			var str = '';
			var needValidate = checkNeedValidate(form);
			if (needValidate) {
				str += checkInputRequired(evt, form);
				str += checkInputError(evt, form);
				str += checkCaptcha();
				str = str.trim();
				var validityForm = false;
				if (str !== '') {
					evt.preventDefault();
					window.setTimeout(function () { // timeout for prevent few modal
						if (window.util.modalIsOpen() === false) {
							window.util.showSystemModal(str);
							validityForm = false;
						}
					}, 500);
				} else {
					validityForm = true;
				}
				return validityForm;
			}
		}
	};

})();
'use srtict';

(function () {
	window.slider = {};
})();
'use strict';

(function () {

	window.slider.slick = {
		inactiveSlide: function (currentSlide) {
			$('.product__nav .product__img').each(function () {
				if ($(this).data('number-slide') !== currentSlide) {
					$(this).addClass('inactive');
				} else {
					$(this).removeClass('inactive');
				}
			});
		}
	};

	$('.js-slick').on('init', function () {
		$('.js-slick').fadeIn(3000);
	});

	$('.js-slick').slick({
		focusOnSelect: true,
		autoplay: false,
		dots: true,
		draggable: true,
		speed: 1000,
		responsive: [{
			breakpoint: 768,
			settings: {
				arrows: false
			}
		}]
	});

})();
'use strict';

(function () {
	if ($('.ms-slide').length) {
		var s = new window.MasterSlider;
		s.control('arrows', {
			autohide: !1
		});
		s.control('bullets', {
			autohide: !1,
			align: 'bottom',
			margin: -40
		});
		s.setup('masterslider', {
			width: 1140,
			height: 761,
			autoHeight: !0,
			space: 0,
			loop: !0,
			view: 'wave',
			layout: 'partialview',
			preload: 0,
			start: 1
		});
	}
})();
'use strict';

(function () {

	var SLIDER_PRICE_RANGE = [100, 10000];

	window.slider.sliderPrice = {
		active: false,
		noUiSliderInit: function () {

			var start_price = SLIDER_PRICE_RANGE[0];
			var end_price = SLIDER_PRICE_RANGE[1];
			if (window.location.hash) {
				var start_price_reg = /&fprice_from=([0-9]*)&/g;
				var matches_start = window.location.hash.match(start_price_reg);
				if (matches_start !== null) {
					var result_start = Number(matches_start[0].replace(/\D+/g, ''));
					start_price = result_start;
				}
				var end_price_reg = /&fprice_to=([0-9]*)/g;
				var matches_end = window.location.hash.match(end_price_reg);
				if (matches_end !== null) {
					var result_end = Number(matches_end[0].replace(/\D+/g, ''));
					end_price = result_end;
				}
			}

			var slider = document.getElementById('slider-price');

			var updatePriceSlider = function () {
				window.pages.catalogData.page_number = 1;
				window.pages.catalogData.start = (window.pages.catalogData.page_number - 1) * window.pages.catalogData.count_product;
				slider.noUiSlider.set([minCost.value, maxCost.value]);
				window.slider.sliderPrice.active = true;
				// window.pages.catalogData.getProduct();
			};

			if (slider !== null && slider !== undefined) {
				window.noUiSlider.create(slider, {
					start: [start_price, end_price],
					connect: true,
					step: 10,
					range: {
						'min': SLIDER_PRICE_RANGE[0],
						'max': SLIDER_PRICE_RANGE[1]
					}
				});
				var minCost = document.getElementById('minCost');
				var maxCost = document.getElementById('maxCost');

				slider.noUiSlider.on('update', function (values) {
					minCost.value = parseFloat(values[0]).toFixed();
					maxCost.value = parseFloat(values[1]).toFixed();
				});

				var minCostTimerId;

				minCost.addEventListener('input', function () {
					clearTimeout(minCostTimerId);
					minCostTimerId = setTimeout(function () {
						updatePriceSlider();
					}, 1000);
				});

				var maxCostTimerId;

				maxCost.addEventListener('input', function () {
					clearTimeout(maxCostTimerId);
					maxCostTimerId = setTimeout(function () {
						updatePriceSlider();
					}, 1000);
				});

				slider.noUiSlider.on('end', function () {
					updatePriceSlider();
				});
			}
		}
	};

})();
'use strict';

(function () {

	window.modal = {};

})();
'use strict';

(function () {

	var pushUpTemplate = $('#push-up-template')[0].content;

	var imgWidth = '130px';
	var imgHeight = '100px';
	var textWidth = '300px';
	var imgMobileWidth = '99px';
	var imgMobileHeight = '90px';
	var textMobileWidth = '196px';

	window.modal.pushUp = {
		imgWidth: null,
		imgHeight: null,
		textWidth: null,
		pushUpWidth: null,
		pushUpModal: function (src, id) {
			'use strict';
			var pushUp = $(pushUpTemplate).clone();
			var pushUpItem = pushUp.find('.push-up__pool-item');
			var pushUpElement = pushUp.find('.push-up');

			pushUpItem.attr('data-number', id.toString());
			pushUpItem.css('width', window.modal.pushUp.pushUpWidth);
			pushUpItem.css('height', window.modal.pushUp.imgHeight);
			pushUpElement.css('width', window.modal.pushUp.imgWidth);
			pushUpElement.find('.push-img').css('background-image', 'url(' + src + ')');
			$('#push-up__pool').addClass('open');
			$('#push-up__pool').append(pushUp);
			setTimeout(function () {
				pushUpElement.addClass('open');
			}, 0);
		},
		pushUpHide: function (text, id) {
			'use strict';
			var durationLeftEffect = parseFloat($('.push-up').css('transition-duration')) * 1000;
			var durationTextVisible = 1000;
			var target = $('#push-up__pool .push-up__pool-item[data-number="' + id + '"]');
			var targetPushUp = target.find('.push-up');
			setTimeout(function () {
				targetPushUp.find('.push-text_script').html(text);
				targetPushUp.css('width', window.modal.pushUp.pushUpWidth);
				setTimeout(function () {
					targetPushUp.find('.push-text_script').css('opacity', '1');
				}, durationLeftEffect);
				setTimeout(function () {
					targetPushUp.find('.push-text_script').css('opacity', '0');
				}, durationLeftEffect * 2 + durationTextVisible);
				setTimeout(function () {
					targetPushUp.css('width', window.modal.pushUp.imgWidth);
				}, durationLeftEffect * 3 + durationTextVisible);
				setTimeout(function () {
					targetPushUp.removeClass('open');
				}, durationLeftEffect * 4 + durationTextVisible);
				setTimeout(function () {
					target.css('opacity', 0);
					target.css('height', 0);
					setTimeout(function () {
						target.remove();
						var pushUpModalCount = $('#push-up__pool .push-up__pool-item').length;
						if (pushUpModalCount === 0) {
							$('#push-up__pool').removeClass('open');
						}
					}, 400);
				}, durationLeftEffect * 5 + durationTextVisible);
			}, 600);
		}
	};

	var setCurrentPushUpSize = function () {
		if ($(window).width() <= 475) {
			window.modal.pushUp.imgWidth = imgMobileWidth;
			window.modal.pushUp.imgHeight = imgMobileHeight;
			window.modal.pushUp.textWidth = textMobileWidth;
			window.modal.pushUp.pushUpWidth = parseFloat(textMobileWidth) + parseFloat(imgMobileWidth);
		} else {
			window.modal.pushUp.imgWidth = imgWidth;
			window.modal.pushUp.imgHeight = imgHeight;
			window.modal.pushUp.textWidth = textWidth;
			window.modal.pushUp.pushUpWidth = parseFloat(textWidth) + parseFloat(imgWidth);
		}
	};

	setCurrentPushUpSize();

	$(window).resize(function () {
		setCurrentPushUpSize();
	});

})();
'use strict';

(function () {

	window.modal.init = {
		initForModal: function () {
			$('.product-slick--small').on('init', function () {
				window.slider.slick.inactiveSlide(0);
			});
			if ($('.product-slick--small').length !== 0 && $('.product-slick--small') !== null) {
				$('.product-slick--small').not('.slick-initialized').slick({
					slidesToShow: 1,
					slidesToScroll: 1,
					arrows: true,
					fade: true,
					responsive: [{
						breakpoint: 768,
						settings: {
							arrows: false
						}
					}]
				});
			}
			$('.button--favorite').on('click', function (e) {
				var product_id = $('#product_id').val();
				var category_id = $('#category_id').val();
				var name = $('.product__title').html();
				var src = $('.product__nav .product__img').css('background-image');
				src = src.replace('url(', '').replace(')', '').replace(/"/gi, '');
				e.preventDefault();
				window.pages.catalog.addToFavorite(name, src, product_id, category_id);
			});
			$('.cart-button').on('click', function (e) {
				var quantity = $('#quantity').val();
				var product_id = $('#product_id').val();
				var category_id = $('#category_id').val();
				var size_val = $('.size-input:checked').val();
				var size_name = $('.size-input:checked').attr('name');
				e.preventDefault();
				var database = {
					quantity: quantity,
					product_id: product_id,
					category_id: category_id,
					to: 'cart'
				};
				$('#fastViewModal').modal('hide');
				setTimeout(function () {
					$('#cartBox').modal('show');
				}, 500);
				database[size_name] = size_val;
				$.ajax({
					type: 'POST',
					url: '/cart/add',
					data: database,
					beforeSend: function () {
						window.modal.cart.initCartScroll();
						$('#cartBox .modal-body').addClass('load');
						$('#cartBox .modal-body').append('<div class="block"><div class="loader"></div></div>');
					},
					success: function () {
						yaCounter49896064.reachGoal('dobvkorz');
						$.ajax({
							type: 'GET',
							url: '/cart/view?ajax=1',
							data: {
								to: 'cart'
							},
							success: function (data) {
								var contentCartModal = window.modal.cart.updateContentCartModal(data);
								setTimeout(function () {
									$('#cartBox .modal-body').removeClass('load');
									$('#cartBox .modal-body .block').remove();
									$('#cartBox .modal-dialog').html(contentCartModal);
									window.modal.cart.initCartScroll();
									window.modal.cart.updateCartPriceAndCount();
								}, 600);
							}
						});
					},
					error: function (thrownError) {
						window.util.showSystemModal(thrownError);
					}
				});
			});
			$('.product__img').on('click', function () {
				var numberSlide = $(this).data('numberSlide');
				try {
					$('.product-slick--small').slick('slickGoTo', parseInt(numberSlide));
				} catch (e) {
					$('.modal').modal('hide');
					window.util.showSystemModal('Ошибка ' + e.name + ':' + e.message + '\n' + e.stack);
				}
			});
			$('.product-slick--small').on('afterChange', function (event, slick, currentSlide) {
				window.slider.slick.inactiveSlide(currentSlide);
			});
		}
	};
	
})();
'use strict';

(function () {

	$('#cartBox').on('shown.bs.modal', function () {
		window.modal.cart.initCartScroll();
	});

	window.modal.cart = {
		updateContentCartModal: function (data) {
			'use strict';
			var contentCartModal = '';
			$('footer').before('<div class="removableBlock">' + data + '</div>');
			contentCartModal = $('.removableBlock .modal-dialog').html();
			$('.removableBlock').remove();
			return contentCartModal;
		},
		updateCartPriceAndCount: function () {
			'use strict';
			var cartSumm = $('#cart-summ').val();
			var cartCount = $('#cart-count').val();
			cartSumm = window.util.splitByNumericOrder(cartSumm);
			// change for desktop
			$('#cart-count-header').html('Корзина - ' + cartCount);
			$('#cart-summ-header').html('руб. ' + cartSumm);
			// change for mobile
			$('.menu__link--cart-count').html('Корзина - ' + cartCount);
			$('.menu__link--cart-summ').html('руб. ' + cartSumm);
		},
		initCartScroll: function () {
			$('#cartBox .modal-body').mCustomScrollbar({
				scrollInertia: 200,
				setHeight: 'calc(100vh - 350px)'
			});
			window.pages.catalog.initForCatalog();
			$('#cartBox .catalog-item__menu--cart').click(function () {
				var req = $(this).find('.catalog-item__menu--cart-text').data('attribute');
				$.ajax({
					beforeSend: function () {
						$('#cartBox .modal-body').addClass('load');
						$('#cartBox .modal-body').append('<div class="block"><div class="loader"></div></div>');
					},
					type: 'GET',
					url: req,
					success: function () {
						$.ajax({
							complete: function () {
								$('#cartBox .modal-body').removeClass('load');
								$('#cartBox .modal-body .block').remove();
							},
							type: 'GET',
							url: '/cart/view?ajax=1',
							data: {
								to: 'cart'
							},
							success: function (data) {
								$('#cartBox').html(data);
								window.modal.cart.initCartScroll();
								window.modal.cart.updateCartPriceAndCount();
							},
							error: function (thrownError) {
								window.util.showSystemModal(thrownError);
							}
						});
					},
					error: function (thrownError) {
						window.util.showSystemModal(thrownError);
					}
				});
			});
		}
	};

})();
'use strict';

(function () {
	window.modal.catalog = {
		fastViewModalAjax: function (href) {
			var url = href + '?ajax=1';
			if (href.indexOf('?') > -1) {
				url = href + '&ajax=1';
			}
			$('#fastViewModal').modal('show');
			$.ajax({
				beforeSend: function () {
					$('#fastViewModal .modal-body').addClass('load');
					$('#fastViewModal .modal-body').append('<div class="block"><div class="loader"></div></div>');
				},
				type: 'GET',
				url: url,
				success: function (data) {
					setTimeout(function () {
						$('#fastViewModal .modal-body').removeClass('load');
						$('#fastViewModal .modal-body .block').remove();
						$('#fastViewModal').html(data);
						window.modal.init.initForModal();
					}, 500);
				},
				error: function (thrownError) {
					$('#fastViewModal').modal('hide');
					setTimeout(function () {
						window.util.showSystemModal(thrownError);
					}, 500);
				}
			});
		}
	};
})();
'use strict';

(function () {

	if ($('#system-message').length !== 0) {
		var message = $('#system-message').find('.alert-message').text();
		$('#system-message').empty();
		window.util.showSystemModal(message);
	}

})();
'use strict';

(function () {
	window.pages = {};
})();
'use strict';

(function () {

	$('#sendAjaxForm').on('submit', function (evt) {
		'use strict';
		evt.preventDefault();

		var form = $(this);
		var url = form.attr('action');

		var validityForm = false;
		validityForm = window.validate.form.checkForm(evt, form);
		if (validityForm === true) {
			$.ajax({
				type: 'POST',
				url: url,
				data: {
					name: $('#user-name').val(),
					email: $('#user-email').val(),
					phone: $('#user-phone').val(),
					city: $('#user-city').val(),
					message: $('#user-message').val(),
					payment_method: $('#drop').val()
				},
				success: function (data) {
					var json = JSON.parse(data);
					window.util.showSystemModal(json.messages[0].message);
					form[0].reset();
				},
				error: function (thrownError) {
					window.util.showSystemModal(thrownError);
				}
			});
		}
	});

	$('.button--business').on('click', function (evt) {
		evt.preventDefault();
		var anchor = $(this).attr('href');
		var offset = $(anchor).offset().top;
		var page = $('html, body');
		setTimeout(function () {
			page.on('scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove', function () {
				page.stop();
				page.off('scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove');
			});
			page.animate({
				scrollTop: offset
			}, 2000, function () {
				page.off('scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove');
			});
		}, 50);
	});

})();
'use strict';

(function () {
	$('#contact-submit').on('click', function (e) {
		'use strict';
		var form = $(this).closest('form');
		e.preventDefault();
		var validityForm = false;
		validityForm = window.validate.form.checkForm(e, form);
		if (validityForm) {
			$.ajax({
				type: 'POST',
				url: '/?option=com_ajax&plugin=NeosQuestion&format=raw',
				data: {
					name: $('#user-name').val(),
					email: $('#email').val(),
					phone: $('#phone').val(),
					city: $('#city').val(),
					message: $('textarea[name="message"]').val()
				},
				success: function (data) {
					var json = JSON.parse(data);
					window.util.showSystemModal(json.messages[0].message);
				},
				error: function (thrownError) {
					window.util.showSystemModal(thrownError);
				}
			});
		}
	});
})();
'use strict';

(function () {

	$('.product .product-slick').on('init', function () {
		window.slider.slick.inactiveSlide(0);
		$('.product-slick').fadeIn(3000);
	});

	$('.product .product-slick').slick({
		slidesToShow: 1,
		slidesToScroll: 1,
		arrows: true,
		fade: true,
		responsive: [{
			breakpoint: 768,
			settings: {
				arrows: false
			}
		}]
	});

	$('.product .product-slick').on('afterChange', function (event, slick, currentSlide) {
		window.slider.slick.inactiveSlide(currentSlide);
	});

	$('.product').on('click', '.product-info-extra__title', function () {
		var _this = $(this);
		var parent = _this.parent();
		var active = 'product-info-extra__item--active';
		var target = parent.find('.product-info-extra__container');
		var list = parent.find('.product-info-extra__list');
		var arrow = parent.find('.product-info-extra__arrow');
		if (parent.hasClass(active)) {
			window.TweenLite.to(target, 0.8, {
				height: 0,
				ease: window.Power2.easeOut
			});
			arrow.removeClass('active');
			setTimeout(function () {
				parent.removeClass(active);
			}, 800);
		} else {
			arrow.addClass('active');
			parent.addClass(active);
			window.TweenLite.to(target, 0.8, {
				height: list.outerHeight(true),
				ease: window.Power2.easeOut
			});
		}
	});

	$('.product').on('click', '.cart-button', function (e) {
		var quantity = $('#quantity').val();
		var product_id = $('#product_id').val();
		var category_id = $('#category_id').val();
		var size_val = $('.size-input:checked').val();
		var size_name = $('.size-input:checked').attr('name');
		e.preventDefault();
		var database = {
			quantity: quantity,
			product_id: product_id,
			category_id: category_id,
			to: 'cart'
		};
		$('#fastViewModal').modal('hide');
		setTimeout(function () {
			$('#cartBox').modal('show');
		}, 500);
		database[size_name] = size_val;
		$.ajax({
			type: 'POST',
			url: '/cart/add',
			data: database,
			beforeSend: function () {
				window.modal.cart.initCartScroll();
				$('#cartBox .modal-body').addClass('load');
				$('#cartBox .modal-body').append('<div class="block"><div class="loader"></div></div>');
			},
			success: function () {
				yaCounter49896064.reachGoal('dobvkorz');
				$.ajax({
					type: 'GET',
					url: '/cart/view?ajax=1',
					data: {
						to: 'cart'
					},
					success: function (data) {
						var contentCartModal = window.modal.cart.updateContentCartModal(data);
						setTimeout(function () {
							$('#cartBox .modal-body').removeClass('load');
							$('#cartBox .modal-body .block').remove();
							$('#cartBox .modal-dialog').html(contentCartModal);
							window.modal.cart.initCartScroll();
							window.modal.cart.updateCartPriceAndCount();
						}, 600);
					}
				});
			},
			error: function (thrownError) {
				window.util.showSystemModal(thrownError);
			}
		});
	});

	$('.product').on('click', '.product__img', function () {
		var numberSlide = $(this).data('numberSlide');
		try {
			$('.product-slick').slick('slickGoTo', parseInt(numberSlide));
		} catch (e) {
			$('.modal').modal('hide');
			window.util.showSystemModal('Ошибка ' + e.name + ':' + e.message + '\n' + e.stack);
		}
	});

	// $('.product').on('click', '.product-info-extra__container', function (e) { // prevent click in extra item block
	// 	if ($(this).hasClass('product-info-extra__container')) {
	// 		e.stopPropagation();
	// 		return false;
	// 	}
	// });

	$('.product__container .product-size__link').on('click', function (evt) {
		evt.preventDefault();
		var src = $(this).attr('href');
		$(this).lightGallery({
			dynamic: true,
			dynamicEl: [{
				'src': src,
				'thumb': src
			}]
		});
		setTimeout(function () {
			window.main.lightGallery.calculatreCloseButtonLightGallery();
		}, 500);
	});

	$('.product').on('click', '.button--favorite', function (e) {
		var product_id = $('#product_id').val();
		var category_id = $('#category_id').val();
		var name = $('.product__title').html();
		var src = $('.product__nav .product__img').css('background-image');
		src = src.replace('url(', '').replace(')', '').replace(/"/gi, '');
		e.preventDefault();
		window.pages.catalog.addToFavorite(name, src, product_id, category_id);
	});

})();
'use strict';

(function () {
	$(document).ready(function () {
		var $container = $('.alphabet-section');
		// filter buttons
		$('#filters .alphabet-index__item').click(function () {
			var $this = $(this);
			// don't proceed if already selected
			if (!$this.hasClass('is-checked')) {
				$this.parents('#options').find('.is-checked').removeClass('is-checked');
				$this.addClass('is-checked');
			}
			var selector = $this.attr('data-filter');
			$container.isotope({
				itemSelector: '.item',
				filter: selector
			});
			return false;
		});
	});
})();
var limitNews = 2; //default
var countStart = 0;

$('.button--news-more').on('click', function () {
	var html = '';
	var _this = $(this);
	countStart++;
	limitNews = $(this).data('limit');
	var request = limitNews * countStart;
	$.ajax({
		beforeSend: function () {
			_this.addClass('is-load');
		},
		complete: function () {
			_this.removeClass('is-load');
		},
		type: 'POST',
		url: '?tmpl=component&start=' + request,
		success: function (data) {
			$('footer').before('<div class="removableBlock">' + data + '</div>');
			var next = $('.removableBlock .button--news-more').data('shownext');
			$('.removableBlock .button--news-more').remove();
			html = $('.removableBlock .news-page .col-md-12').html();
			_this.before(html);
			$('.removableBlock').remove();
			next > 0 ? '' : _this.remove();
		},
		error: function (thrownError) {
			window.util.showSystemModal(thrownError);
		}
	});
});
'use strict';

(function () {

	var preloaderInnerStart = function (elem) {
		elem.addClass('is-load');
		elem.append('<div class="preloader loader"><div class="block"></div></div>');
	};

	var preloaderInnerEnd = function (elem) {
		elem.removeClass('is-load');
		elem.find('.preloader').remove();
	};

	var cartDebounceValue = 500;

	window.pages.cart = {
		cartContent: function (cart) {
			var cartContentTemplate = $('#cart-content-template')[0].content;
			var cartObj = cart.cart;
			var renderCartContent = function (cart, key) {
				var products = cart.products;
				var summ = products[key].price * products[key].quantity;
				var cartContentElement = $(cartContentTemplate).clone();
				cartContentElement.find('.catalog-item__img').css('background-image', 'url(' + cart.image_product_path + '/' + products[key].product_id + '/' + products[key].image + ')');
				cartContentElement.find('.catalog-item__img').addClass('catalog-item__img--' + products[key].image_class);
				cartContentElement.find('.table__col-2').attr('href', products[key].href);
				cartContentElement.find('.table__col-2 .table__cell').html(products[key].product_name + '<br>' + strSizeShoe);
				cartContentElement.find('.table__col-3 .table__cell').html(products[key].product_id);
				cartContentElement.find('.cart-page__count-input').attr('name', 'quantity[' + key + ']').attr('value', products[key].quantity);
				cartContentElement.find('.table__cell-price').html(window.util.splitByNumericOrder(products[key].price) + ' <span class="currency">руб.</span>');
				cartContentElement.find('.table__cell-sum').html(window.util.splitByNumericOrder(summ) + ' <span class="currency">руб.</span>');
				cartContentElement.find('.table__col-7 .table__cell').attr('href', '/cart/delete?number_id=' + key);
				return cartContentElement;
			};
			var fragment = $(document.createDocumentFragment());
			var products = cartObj.products;
			for (var key in products) {
				var strSizeShoe = '';
				if (cart === undefined) {
					return false;
				}
				if (products[key].attributes_value[0] && products[key].attributes_value[0].value) {
					strSizeShoe = '<div class="list_attribute"><p class="jshop_cart_attribute"><span class="name">Размер обуви</span>:<span class="value">' + products[key].attributes_value[0].value + '</span></p></div>';
				}
				fragment.append(renderCartContent(cartObj, key));
			}
			$('.table--cart-page .table__row-simple').remove();
			$('.table--cart-page .table__row-head').after(fragment);
			$('.cart-page__result-value').html(window.util.splitByNumericOrder(cartObj.price_product) + ' Руб.');
			window.pages.cart.initCartButton();
		},
		cartRefresh: function (input, value) {
			var database = {};
			var name = input.attr('name');
			database[name] = value;
			var table = $('.table--cart-page');
			$.ajax({
				beforeSend: function () {
					preloaderInnerStart(table);
				},
				complete: function () {
					preloaderInnerEnd(table);
				},
				type: 'POST',
				url: '/cart/refresh?ajax=1',
				data: database,
				success: function (data) {
					var cart = JSON.parse(data).cart.products;
					var json = JSON.parse(data).cart;
					var error = JSON.parse(data).rows;
					if (error && error[0]) {
						window.util.showSystemModal(error[0].message);
					}
					window.pages.cart.cartContent(json, cart);
				},
				error: function (thrownError) {
					window.util.showSystemModal(thrownError);
				}
			});
		},
		initCartButton: function () {
			// Изменение количества товара на странице Корзины
			var timerId;
			var cartRefreshDebounce = function (input, value) {
				if (timerId) {
					clearTimeout(timerId);
				}
				timerId = setTimeout(function () {
					window.pages.cart.cartRefresh(input, value);
				}, cartDebounceValue);
			};
			$('.cart-page__count-plus').on('click', function () {
				var _this = $(this);
				var input = _this.siblings('.cart-page__count-input');
				var valueUp = parseInt(input.val());
				valueUp++;
				input.val(valueUp);
				cartRefreshDebounce(input, valueUp);
			});
			$('.cart-page__count-minus').on('click', function () {
				var _this = $(this);
				var input = _this.siblings('.cart-page__count-input');
				var valueDown = parseInt(input.val());
				var minVal = input.data('min');
				if (valueDown > minVal) {
					valueDown--;
					input.val(valueDown);
					cartRefreshDebounce(input, valueDown);
				}
			});
			//Удаление товара в Корзине
			$('.table__icon--remove--cart').on('click', function (e) {
				e.preventDefault();
				e.stopPropagation();
				if ($(this).hasClass('table__cell')) {
					e.preventDefault();
					e.stopPropagation();
					return false;
				}
				var href = $(this).closest('.table__cell').attr('href');
				$.ajax({
					beforeSend: function () {
						$('.cart-page__table').addClass('is-load');
						$('.preloader').addClass('loader');
					},
					complete: function () {
						$('.cart-page__table').removeClass('is-load');
						$('.preloader').removeClass('loader');
					},
					type: 'POST',
					url: href + '&ajax=1',
					success: function (data) {
						var cart = JSON.parse(data);
						window.pages.cart.cartContent(cart);
					},
					error: function (thrownError) {
						window.util.showSystemModal(thrownError);
					}
				});
			});
		}
	};

	window.pages.cart.initCartButton();

})();
'use strict';

(function () {

	$(window).on('load', function () {});

	window.pages.catalog = {
		initForCatalog: function () {
			if ($('select#order').length !== 0) {
				$('select#order').select2({
					width: 'element',
					minimumResultsForSearch: -1
				});
			}
			$('.catalog-item__name').mouseenter(function () {
				var widthBlock = $(this).width();
				var width = window.util.realWidth($(this));
				if (widthBlock < width) {
					$(this).animate({
						marginLeft: -(width - widthBlock)
					}, 500);
				}
			});
			$('.catalog-item__name').mouseleave(function () {
				$(this).animate({
					marginLeft: 0
				});
			});
		},
		addToFavorite: function (name, src, product_id, category_id) {
			'use strict';
			$.ajax({
				type: 'POST',
				url: '/cart/add',
				beforeSend: function () {
					window.modal.pushUp.pushUpModal(src, product_id);
					window.modal.pushUp.pushUpHide('Вы отложили в <b>избранное</b> ' + name, product_id);
				},
				data: {
					product_id: product_id,
					category_id: category_id,
					to: 'wishlist',
					ajax: 1
				},
				success: function (data) {
					yaCounter49896064.reachGoal('izbrannoe');
					var json = JSON.parse(data);
					var countFavoriteProduct = json.cart.count_diff_product;
					var innerFavoriteLink = 'Избранное - ' + countFavoriteProduct;
					// for desktop
					$('.menu__link--favorite').html(innerFavoriteLink);
					// for mobile
					$('#cart-favorite').html(innerFavoriteLink);
				},
				error: function () {
					// window.modal.pushUp.pushUpHide('Товар не был добавлен в <b>избранное</b> ', product_id);
					window.util.showSystemModal('Товар не добавлен в избранное. Попробуйте позже ;)');
				}
			});
		},
		initFastViewButton: function () {
			$('.fast-view').on('click', function (e) {
				e.preventDefault();
				var href = $(this).closest('.catalog-product__item').attr('href');
				window.modal.catalog.fastViewModalAjax(href);
			});
		}
	};
	window.pages.catalog.initForCatalog();
	window.pages.catalog.initFastViewButton();
})();
'use strict';

(function () {

	window.pages.catalogMobile = {
		filterOpen: function () {
			$('.catalog-filter__title').addClass('active');
			$('.catalog-filter__form').addClass('active');
			$('.catalog-product').addClass('product--hide');
		},
		filterClose: function () {
			$('.catalog-filter__title').removeClass('active');
			$('.catalog-filter__form').removeClass('active');
			$('.catalog-product').removeClass('product--hide');
		},
		init: function () {
			$('.catalog-filter__title').on('click', function () {
				if ($(window).width() <= 768) {
					if ($(this).hasClass('active')) {
						window.pages.catalogMobile.filterClose();
						$('.catalog-filter__form').css('height', 0);
					} else {
						window.pages.catalogMobile.filterOpen();
						var height = 0;
						$('.catalog-filter__form .filter').each(function () {
							var h_block = parseInt($(this).outerHeight(true));
							height = height + h_block;
						});
						var heightClearFilter = $('.clear-filter').outerHeight(true);
						var heightButtonContainer = $('.button_container').outerHeight(true);
						height = height + heightClearFilter + heightButtonContainer;
						$('.catalog-filter__form.active').css('height', height);
					}
				}
			});
		}
	};

})();
'use strict';

(function () {

	var productTemplate = $('#similar-template')[0].content;
	var filterItemTemplate = $('#filter-item-template')[0].content;
	var getLabelHtml = function (data) {
		var labelHtml = '';
		if (data && data._label_class !== null && data._label_class !== '' && data._label_class !== undefined) {
			labelHtml += '<div class="catalog- ' + data._label_class + '">' + data._label_name + '</div>';
		}
		if (data && data.label_classes !== null && data.label_classes !== '' && data.label_classes !== undefined) {
			var arrLabelClasses = data.label_classes.split(',');
			var arrLabelNames = data.label_names.split(',');
			arrLabelNames.map(function (value, index) {
				labelHtml += '<div class="catalog- ' + arrLabelClasses[index] + '">' + value + '</div>';
			});
		}
		return labelHtml;
	};

	window.pages.catalogUtil = {
		filterGet: function (data) {
			if (data == '') {
				$('.catalog-filter__title').addClass('hidden-xs');
			}
			$('.catalog-filter .catalog-filter__form').remove();
			$('.catalog-block .catalog-product .catalog-filter .filter__select').after(data);
		},
		countProductGet: function (data) {
			$('.catalog-container .count-product').remove();
			$('.catalog-block .catalog-container .filter-show').before(data);
		},
		sortGet: function (data) {
			$('.catalog-container .catalog-filter .filter__select form').remove();
			$('.catalog-block .catalog-product .filter__select').html(data);
		},
		paginationGet: function (data) {
			$('.pagination-block').empty();
			$('.pagination-block').html(data);
		},
		filterLabelGet: function () {
			$('.filter-show').empty();
			var fragment = $(document.createDocumentFragment());
			var data = {
				id: '',
				name: ''
			};
			$('.catalog-filter input:checked').each(function () {
				data.id = $(this).attr('id');
				data.name = $(this).next('label').data('name');
				fragment.append(window.pages.catalogUtil.renderFilterItem(data));
			});
			$('.filter-show').append(fragment);
		},
		renderProduct: function (data) {
			var productElement = $(productTemplate).clone();
			var productQuantity = parseInt(data.product_quantity, 10);
			var productItem = productElement.find('.catalog-product__item');
			var productItemSoldText = productElement.find('.catalog-item__text');
			var productImg = productElement.find('.catalog-item__img');
			var isSoonPage = $('.catalog-block').hasClass('soon');
			productItem.attr('data-product-id', data.product_id);
			productItem.attr('data-category-id', data.category_id);
			productItem.attr('href', data.product_link);
			productImg.addClass('catalog-item__img--' + data.image_class);
			productImg.css('background-image', 'url(' + data.image + ')');
			if (data.label_classes !== null || data._label_class !== null) {
				var labelHtml = getLabelHtml(data);
				productElement.find('.catalog-product__label-container').empty();
				productElement.find('.catalog-product__label-container').html(labelHtml);
			}
			productElement.find('.catalog-item__name').html(data.name);
			productElement.find('.catalog-item__articul').html('Артикул: ' + data.product_ean);
			if (productQuantity <= 0 && isSoonPage) {
				productElement.find('.fast-view').remove();
				productElement.find('.add-favorite').remove();
				productElement.find('.catalog-item__price').html('');
				productElement.find('.catalog-item__articul').html('');
				productItemSoldText.remove();
			} else if (productQuantity <= 0 && !isSoonPage) {
				productElement.find('.fast-view').remove();
				productElement.find('.add-favorite').remove();
				productElement.find('.notify-me').remove();
			} else if (productQuantity > 0) {
				productElement.find('.catalog-item__text').remove();
				productElement.find('.notify-me').remove();
				productElement.find('.catalog-item__price').html(window.util.splitByNumericOrder(data.product_price) + '<span class="currency"> руб.</span>');
			}
			return productElement;
		},
		renderFilterItem: function (data) {
			var filterItemElement = $(filterItemTemplate).clone();
			filterItemElement.find('.filter-show__item').attr('data-target', data.id);
			filterItemElement.find('.filter-show__name').html(data.name);
			return filterItemElement;
		}
	};

})();
'use strict';

(function () {

	var DEFAULT_PAGINATION_PAGE = 1;
	var TIMEOUT_REMOVE_TOOLTIP_BUTTON = 5000; // ms
	var DEBOUNCE_TIMEOUT = 400;

	var saveCustomScrollPosition = function (element) {
		// Для отдельных блоков с чекбоксами (Пример: Производитель, Страна)
		if (element.closest('.filter__container--scroll').length !== 0) {
			window.main.scroll.mCustomScrollValue = element.closest('.filter__container--scroll').find('.simplebar-scroll-content')[0].scrollTop;
			window.main.scroll.blockForCustomScroll = element.closest('.filter').attr('id');
		}
	};

	var recalculatePaginationStart = function () {
		window.pages.catalogData.start = (window.pages.catalogData.page_number - 1) * window.pages.catalogData.count_product;
	};

	var resetPaginationToDefault = function () {
		window.pages.catalogData.page_number = DEFAULT_PAGINATION_PAGE;
		recalculatePaginationStart();
	};

	var toggleFilterLabel = function (element) {
		var name = element.parent().find('label').data('name');
		var id = element.attr('id');
		var data = {
			id: '',
			name: ''
		};
		var fragment = $(document.createDocumentFragment());
		if (element.prop('checked') && name !== undefined) {
			data.id = element.attr('id');
			data.name = element.next('label').data('name');
			fragment.append(window.pages.catalogUtil.renderFilterItem(data));
			$('.filter-show').append(fragment);
		} else {
			$('.filter-show__item[data-target="' + id + '"]').remove();
		}
		initRemoveLabel();
	};

	var initSubmitOnTooltipButton = function () {
		$('.tooltip_button').on('click', function (evt) {
			evt.preventDefault();
			resetPaginationToDefault();
			window.pages.catalogData.getProduct();
		});
	};

	var hideTooltipButton = function() {
		// Hide previous button if exist
		var transitionDuration = 0;
		if ($('.tooltip_button').length > 0) {
			$('.tooltip_button')[0].style.left = 0;
			transitionDuration = window.util.getTransitionDuration($('.tooltip_button'));
		}
		setTimeout(function () {
			// Remove previous button from filter
			$('.tooltip_button').remove();
		}, transitionDuration);
		return transitionDuration;
	};

	var calculatePositionTooltipButton = function(element) {
		var heightFilter = element.closest('.filter').outerHeight();
		var heightFilterContainer = element.closest('.filter__container').outerHeight();
		var positionFilterContainer = element.closest('.filter__container').position();
		var positionElement = element.parent().position();
		var heightFilterItem = element.parent().outerHeight();
		var positionTooltipButton = (heightFilterItem / 2) + positionFilterContainer.top + positionElement.top;
		// Fix for position more than height container
		if (positionTooltipButton > heightFilter - heightFilterItem) {
			positionTooltipButton = heightFilter - heightFilterItem;
		}
		// Fix for position less than height container
		if (positionTooltipButton < heightFilter - heightFilterContainer) {
			positionTooltipButton = heightFilter - heightFilterContainer;
		}
		return positionTooltipButton;
	};

	var timerID;
	var timerIDDebounce;
	var appendSubmitButton = function (element) {
		// Check position button for prevent reopening tooltip button
		var tooltipButton = element.closest('.filter').find('.tooltip_button')[0];
		if(tooltipButton !== null && tooltipButton !== undefined) {
			var oldPositionTooltipButton = parseInt(tooltipButton.style.top);
			var newPositionTooltipButton = calculatePositionTooltipButton(element);
			if(oldPositionTooltipButton === newPositionTooltipButton){return;}
		}
		// Change timeout to 0 for first checkbox click
		var timeout = DEBOUNCE_TIMEOUT;
		if($('.tooltip_button').length === 0) {timeout = 0;}
		// Debounce for multiply checkbox click
		if (timerIDDebounce) {
			clearTimeout(timerIDDebounce);
		}
		timerIDDebounce = setTimeout(function () {
			var transitionDuration = hideTooltipButton();
			// Wait hide previous button, if exist
			setTimeout(function () {
				// Append new button
				var buttonSubmit = '<div class="tooltip_button">Показать<div>';
				element.closest('.filter').append(buttonSubmit);
				// Set top position button
				var positionTooltipButton = calculatePositionTooltipButton(element);
				$('.tooltip_button')[0].style.top = positionTooltipButton + 'px';
				// Show & init new button
				var widthButton = $('.tooltip_button').outerWidth();
				$('.tooltip_button').addClass('open');
				$('.tooltip_button.open')[0].style.left = '-' + widthButton + 'px';
				initSubmitOnTooltipButton();
			}, transitionDuration);
		}, timeout);

		// Remove button after user checkbox select
		if (timerID) {
			clearTimeout(timerID);
		}
		timerID = setTimeout(function () {
			hideTooltipButton();
		}, TIMEOUT_REMOVE_TOOLTIP_BUTTON);
	};

	var initRemoveLabel = function () {
		$('.filter-show .filter-show__del').on('click', function () {
			resetPaginationToDefault();
			var target_input = $(this).closest('.filter-show__item').data('target');
			$('#' + target_input).prop('checked', false);
			$(this).closest('.filter-show__item').remove();
			window.pages.catalogData.getProduct($('#' + target_input));
		});
	};

	window.pages.catalogInit = {
		initForcatalog: function () {
			$('.catalog-block *').off(); //  remove listener for all catalog element
			$(window).on('hashchange', function () {
				window.pages.catalogData.flag = true;
				window.pages.catalogData.getProduct();
			});
			$('select#order').select2({
				width: 'element',
				minimumResultsForSearch: -1
			});
			$('.catalog-filter__button').on('click', function () {
				if ($(this).hasClass('catalog-filter__half')) {
					$('.catalog-product').addClass('half').removeClass('full');
				} else if ($(this).hasClass('catalog-filter__full')) {
					$('.catalog-product').removeClass('half').addClass('full');
				}
			});
			$('#sort_count').on('submit', function (e) {
				e.preventDefault();
				window.pages.catalogData.getProduct();
			});
			$('.catalog-product__item').on('click', function (evt) {
				var itemHref = $(this).attr('href');
				if (itemHref.length <= 1) {
					evt.preventDefault();
				}
			});
			$('.count-product__item').on('click', function () {
				if ($(this).hasClass('count-product__item--month')) {
					window.pages.catalogData.data_month = $(this).data('delivery_times');
					window.pages.catalogData.getProduct();
					return false;
				}
				if ($(this).is('.count-product__item:first')) {
					return false;
				} else {
					window.pages.catalogData.count_product = $(this).html();
					resetPaginationToDefault();
					if ($(this).html().indexOf('Все') > -1) {
						window.pages.catalogData.start = 0;
						window.pages.catalogData.count_product = 9999;
					}
					$('#sort_count').trigger('submit');
					$(this).closest('.count-product__list').find('.count-product__item--active').removeClass('count-product__item--active');
					$(this).addClass('count-product__item--active');
				}
			});
			$('#order').on('change', function (e) {
				e.preventDefault();
				window.pages.catalogData.firstLoadFlag = false;
				window.pages.catalogData.sort_value = $(this).val();
				resetPaginationToDefault();
				window.pages.catalogData.getProduct();
			});
			$('.catalog-filter .filter__checkbox:checkbox').on('change', function () {
				var element = $(this);
				toggleFilterLabel(element);
				saveCustomScrollPosition(element);
				appendSubmitButton(element);
			});
			$('.pagination-block .number-page__item').on('click', function (e) {
				e.preventDefault();
				window.pages.catalogData.page_number = $(this).attr('title');
				recalculatePaginationStart();
				window.pages.catalogData.getProduct();
				$(this).closest('.number-page').find('.number-page__item--active').removeClass('number-page__item--active');
				$(this).addClass('number-page__item--active');
			});
			$('.pagination-block .next-page').on('click', function (e) {
				e.preventDefault();
				window.pages.catalogData.page_number = parseFloat(window.pages.catalogData.page_number);
				window.pages.catalogData.page_number += 1;
				recalculatePaginationStart();
				window.pages.catalogData.getProduct();
			});
			$('.pagination-block .prev-page').on('click', function (e) {
				e.preventDefault();
				window.pages.catalogData.page_number = parseFloat(window.pages.catalogData.page_number);
				window.pages.catalogData.page_number -= 1;
				recalculatePaginationStart();
				window.pages.catalogData.getProduct();
			});
			$('.icon-arrow').on('click', function () {
				if ($('#orderby').val() === '1') {
					$('#orderby').val('0');
					window.pages.catalogData.orderby_val = 0;
					window.pages.catalogData.getProduct();
				} else {
					$('#orderby').val('1');
					window.pages.catalogData.orderby_val = 1;
					window.pages.catalogData.getProduct();
				}
			});
			$('.catalog-filter__form button[type="submit"]').on('click', function (evt) {
				evt.preventDefault();
				resetPaginationToDefault();
				window.pages.catalogData.getProduct();
			});
			$('.clear-filter').on('click', function (e) {
				e.preventDefault();
				resetPaginationToDefault();
				$('.filter-show').empty();
				$('input:checkbox').prop('checked', false);
				// slow scroll for browser on hashchange
				history.pushState(null, null, '');
				window.location.hash = '#custom';
				window.slider.sliderPrice.active = false;
				window.pages.catalogData.data_month = null;
				window.pages.catalogData.getProduct();
			});
			$('.catalog-product').on('click', '.add-favorite', function (e) {
				e.preventDefault();
				var name = $(this).closest('.catalog-item').find('.catalog-item__name').html();
				var src = $(this).closest('.catalog-item').find('.catalog-item__img').css('background-image');
				src = src.replace('url(', '').replace(')', '').replace(/"/gi, '');
				var product_id = $(this).closest('.catalog-product__item').data('productId');
				var category_id = $(this).closest('.catalog-product__item').data('categoryId');
				window.pages.catalog.addToFavorite(name, src, product_id, category_id);
			});
			initRemoveLabel();
			window.slider.sliderPrice.noUiSliderInit();
			window.main.scroll.initCustomScroll();
			window.pages.catalog.initForCatalog();
			window.pages.catalogMobile.init();
			window.pages.catalog.initFastViewButton();
			window.modal.init.initForModal();
			window.pages.soon.init();
		}
	};

})();
'use strict';

(function () {

	var FILTERS = {
		EXTRA_FIELDS: {
			regexp : /&extra_fields\d{1,}=\d{1,}/ig,
			name: '&extra_fields'
		},
		ATT_FIELDS: {
			regexp : /&att_fields\d{1,}=\d{1,}/ig,
			name: '&att_fields'
		},
		MANAFACTURERS: {
			regexp: /&manufacturers=/ig,
			new_val: '&manufacturers[]='
		},
		LABELS: {
			regexp: /&labels=/ig,
			new_val: '&labels[]='
		},
		DELIVERY_TIMES: {
			regexp: /&delivery_times=/ig,
			new_val: '&delivery_times[]='
		}
	};

	var replaceFilterString = function(string, filter) {
		var regExp = filter.regexp;
		var nameFilter = filter.name;
		var match = string.match(regExp);
		if(match) {
			for(var i = 0;i < match.length;i++){
				var arrFromMatch = match[i].split('=');
				var first = arrFromMatch[0].replace(nameFilter, '');
				var second = parseInt(arrFromMatch[1], 10);
				string = string.replace(match[i], nameFilter + '[' + first + '][]=' + second);
			}
		}
		return string;
	};

	var convertHashToFrontendFormat = function(hash) {
		return hash.replace(/\[/ig, '').replace(/\]/ig, '');
	};

	var convertHashToBackendFormat = function(hash) {
		var result = hash.replace(FILTERS.MANAFACTURERS.regexp, FILTERS.MANAFACTURERS.new_val);
		result = result.replace(FILTERS.LABELS.regexp, FILTERS.LABELS.new_val);
		result = result.replace(FILTERS.DELIVERY_TIMES.regexp, FILTERS.DELIVERY_TIMES.new_val);
		result = replaceFilterString(result, FILTERS.EXTRA_FIELDS);
		result = replaceFilterString(result, FILTERS.ATT_FIELDS);
		return result;
	};

	var createBaseHash = function () {

		var order = '&order=' + window.pages.catalogData.sort_value;
		var orderby = '&orderby=' + window.pages.catalogData.orderby_val;
		var limit = '&limit=' + window.pages.catalogData.count_product;
		var page = '&start=' + window.pages.catalogData.start;
		var hash = order + orderby + limit + page;
		return hash;

	};

	var createHash = function () {

		window.pages.catalogData.path = window.location.pathname + '?tmpl=component';
		// сменить порядок сортировки на предустановленный для этих страниц
		var regV = /odezhda|krossovki|aksessuary/ig;
		var result = window.pages.catalogData.path.match(regV);
		if (result && window.pages.catalogData.firstLoadFlag) {
			window.pages.catalogData.sort_value = 4;
		}
		if (window.location.search !== '') {
			window.pages.catalogData.path = window.location.pathname + window.location.search + '&tmpl=component';
		}
		var hash = createBaseHash();
		// add slider hash if slider is active & exist
		var slider_hash = '';
		if ($('#minCost').length !== 0 && window.slider.sliderPrice.active === true) {
			slider_hash = '&fprice_from=' + $('#minCost').val() + '&fprice_to=' + $('#maxCost').val();
		}
		hash += slider_hash;
		// add all filter from page to hash
		var filter = '';
		$('.catalog-filter input.filter__checkbox:checked, .catalog-filter input.size-input--checkbox:checked').each(function () {
			filter += '&' + $(this).attr('name') + '=' + $(this).val();
		});
		hash += filter;
		// check data month parameter for soon page
		if (window.pages.catalogData.data_month) {
			var dataMonth = window.pages.catalogData.data_month + '';
			if (dataMonth.indexOf(',') >= 0) {
				dataMonth = dataMonth.replace(/,/g, '&delivery_times[]=');
			}
			hash += '&delivery_times[]=' + dataMonth;
		}
		// catch hashchange event for navigation in catalog pages
		if (window.pages.catalogData.flag === true) {
			hash = window.location.hash;
			hash = convertHashToBackendFormat(hash);
			if (hash === '') {
				window.pages.catalogData.isBackFromCatalogEvent = true;
				return false;
			}
			hash = hash.replace('!order=', '&order=');
			window.pages.catalogData.flag = false;
		}
		return hash;

	};

	var updateDatafromHash = function (inputHash) {
		var hash = inputHash.replace('#!', '');
		var hashArr = hash.split('&');
		var hashObj = {};
		var hashOutput = '';
		hashArr.map(function (item, index) {
			if (index >= 4) {
				hashOutput += '&' + item;
			} else {
				var bufferArr = item.split('=');
				hashObj[bufferArr[0]] = bufferArr[1];
			}
		});
		var sliderPriceActive = hashOutput.indexOf('fprice_from');
		if (sliderPriceActive > 0) {
			window.slider.sliderPrice.active = true;
		}
		window.pages.catalogData.lastHash = hashOutput;
		window.pages.catalogData.count_product = hashObj.limit;
		window.pages.catalogData.sort_value = hashObj.order;
		window.pages.catalogData.orderby_val = hashObj.orderby;
		window.pages.catalogData.start = hashObj.start;
		window.pages.catalogData.page_number = (hashObj.start / hashObj.limit) + 1;
	};

	window.pages.catalogData = {
		count_product: 40,
		page_number: 0,
		start: 0,
		sort_value: 3,
		orderby_val: 3,
		flag: false,
		firstLoadFlag: true,
		data_month: null,
		path: '',
		lastHash: '',
		getProduct: function () {
			if ($('.catalog-block').length !== 0) {
				var windowHash = window.location.hash;
				windowHash = convertHashToBackendFormat(windowHash);
				var hash = '';
				hash = createHash();
				if (windowHash === '' || windowHash === '#custom') {
					hash = createHash();
					if (window.pages.catalogData.isBackFromCatalogEvent === true) {
						history.back();
						return false;
					}
				} else if (window.pages.catalogData.firstLoadFlag && windowHash !== '' && windowHash !== '#custom') {
					updateDatafromHash(windowHash);
					var newHash = createBaseHash();
					hash = newHash + window.pages.catalogData.lastHash;
				}
				var hash_request = hash.replace('#', '');
				var hash_address = hash_request.replace('&order=', '!order=');
				var convertedHash = convertHashToFrontendFormat(hash_address);
				$(window).off('hashchange');
				window.location.hash = convertedHash;
				$.ajax({
					beforeSend: function () {
						$('.catalog-block').addClass('is-load');
						$('.preloader .block').addClass('loader');
						$('.preloader').addClass('catalog-loader');
					},
					complete: function () {
						$('.catalog-block').removeClass('is-load');
						$('.preloader .block').removeClass('loader');
						$('.preloader').removeClass('catalog-loader');
					},
					type: 'GET',
					url: window.pages.catalogData.path + hash_request,
					success: function (data) {
						var content, json;
						try {
							content = JSON.parse(data);
						} catch (e) {
							window.util.showSystemModal('Получен неверный формат данных');
							return;
						}
						json = content.rows;
						var fragment = $(document.createDocumentFragment());
						for (var key in json) {
							fragment.append(window.pages.catalogUtil.renderProduct(json[key]));
						}
						window.pages.catalogUtil.countProductGet(content.product_count);
						window.pages.catalogUtil.sortGet(content.sort_count);
						window.pages.catalogUtil.filterGet(content.filters);
						window.pages.catalogUtil.paginationGet(content.pagination);
						window.pages.catalogUtil.filterLabelGet();
						$('.catalog-product__item').remove();
						$('.catalog-block .catalog-product .catalog-filter').after(fragment);
						window.pages.catalogInit.initForcatalog();
					},
					error: function (thrownError) {
						window.util.showSystemModal(thrownError);
					}
				});
				window.pages.catalogData.firstLoadFlag = false;
				window.main.scroll.scrollContentTop();
				window.pages.catalogMobile.filterClose();
				$('.catalog-filter__full').removeClass('active');
			}
		}
	};

	$(window).on('hashchange', function () {
		window.pages.catalogData.flag = true;
		window.pages.catalogData.getProduct();
	});

	$(document).ready(function () {
		window.pages.catalogData.getProduct();
	});

})();
'use strict';

(function () {

	function deliveryCost() {
		'use strict';
		if ($('.cart-page--shipping .table--delivery').length !== 0) {
			var priceDelivery = $('.cart-page__container--step-three .filter__checkbox:checked').closest('.table__row').find('.table__col-5 .table__cell').html();
			$('.cart-page--step-three .table--step-three .table__col-2 .text').eq(1).html(priceDelivery);
			var price = $('.cart-page--step-three .table--step-three .table__col-2 .text').eq(0).html();
			price = parseInt(price.replace(' ', ''));
			priceDelivery = parseInt(priceDelivery.replace(' ', ''));
			$('.cart-page--step-three .table--step-three .table__col-2').eq(2).find('.text--black').html(window.util.splitByNumericOrder(price + priceDelivery) + ' руб.');
		}
	}

	$(document).ready(function () {
		'use strict';
		deliveryCost();
	});

	// Подсвечивание активных элементов на 3 шаге и расчёт доставки без перезагрузки страницы
	$('.cart-page__container--step-three .filter__checkbox,.cart-page__container--drop-step-three .filter__checkbox').on('change', function () {
		'use strict';
		$(this).closest('.table__row').parent().find('.table__row--active').removeClass('table__row--active');
		$(this).closest('.table__row').addClass('table__row--active');
		deliveryCost();
	});

	$('#payment-select .filter__label').on('mouseup', function(e) {
		var _this = $(this);
		var checkbox = _this.prev();
		var form = _this.parentsUntil('form').parent();
		if (checkbox.val() != 1) {
			form.prop('target', '_blank');
		} else {
			form.prop('target', '_self');
		}
	})

})();
'use strict';

(function () {

	window.pages.soon = {
		product_id: null,
		init: function() {
			$('.notify-me').on('click', function (e) {
				e.preventDefault();
				window.pages.soon.product_id = $(this).closest('.catalog-product__item').data('productId');
				$('#notifyModal').modal('show');
			});
		
			$('.button--notify').on('click', function (e) {
				e.preventDefault();
				var form = $('#notifyModal form');
				var url = form.attr('action');
				var validityForm = false;
				validityForm = window.validate.form.checkForm(e, form);
				if (validityForm === true) {
					$.ajax({
						type: 'POST',
						url: url,
						data: {
							email: $('#notifyModal .input--mail').val(),
							product_id: window.pages.soon.product_id
						},
						success: function () {
							$('#notifyModal').modal('hide');
							$('#notifySuccessModal').modal('show');
							form[0].reset();
						},
						error: function (thrownError) {
							$('#notifyModal').modal('hide');
							window.util.showSystemModal(thrownError);
						}
					});
				}
			});
			
		}
	};

})();
'use strict';

(function () {

	$('.favorite .table__icon--remove').on('click', function (evt) {
		'use strict';
		evt.preventDefault();
		var link = $(this).closest('a').attr('href');
		$('#favoriteRemoveButton').attr('href', link);
		$('#favoriteRemove').modal('show');
	});

	$('.button-img').on('click', function (e) {
		e.preventDefault();
		var href = $(this).attr('href');
		window.modal.catalog.fastViewModalAjax(href);
	});

})();
'use strict';

(function () {

	window.pages.reviewAdd = {
		minHeight: 480,
		minWidth: 600
	};

	$('.block-reviews__star.edit').on('click', function () {
		$(this).addClass('block-reviews__star--active');
		$(this).prevAll('.block-reviews__star').addClass('block-reviews__star--active');
		$(this).nextAll('.block-reviews__star').removeClass('block-reviews__star--active');
		var countStar = $('.block-reviews__star--active').length;
		$('#gbvote').val(countStar);
	});

	var removeImage = function (el) {
		var target = el.attr('id');
		el.wrap('<form>').closest('form').get(0).reset();
		el.unwrap();
		$('label[for="' + target + '"] .image-preview').css('background-image', 'url()');
		$('label[for="' + target + '"]').removeClass('active');
	};

	//preview photo
	function readURL(input) {
		if (input.files && input.files[0]) {
			var reader = new FileReader();
			reader.onload = function (e) {
				var img = document.createElement('img');
				img.onload = function () {
					if(this.width < window.pages.reviewAdd.minWidth || this.height < window.pages.reviewAdd.minHeight) {
						var el = $(input).parent().find('.upload');
						removeImage(el);
						window.util.showSystemModal('Размер изображения маленький. Минимальный размер загружаемого изображения:' + window.pages.reviewAdd.minWidth + 'x' + window.pages.reviewAdd.minHeight);
					} else {
						$(input).parent().find('.image-preview').css('background-image', 'url(' + e.target.result + ')');
						$(input).parent().addClass('active');
					}
				};
				img.src = e.target.result;
			};
			reader.readAsDataURL(input.files[0]);
		}
	}

	$('#imgInput0,#imgInput1,#imgInput2').change(function () {
		readURL(this);
	});

	$('.input-file .image-preview__menu').on('click', function (e) {
		e.stopPropagation();
		e.preventDefault();
		var el = $(this).parent().find('.upload');
		removeImage(el);
	});

	$('.review-edit .button[type=submit]').on('click', function (e) {
		$('input.upload').each(function () {
			var value = $(this).val();
			if (value === '' || value === undefined || value === null) {
				e.preventDefault();
				window.util.showSystemModal('Необходимо загрузить не менее 3 фотографий');
			}
		});
	});

})();
'use strict';

(function () {

	$(document).ready(function () {
		if (typeof $.prototype.lightGallery == 'function') {
			$('.block-reviews__images-block').lightGallery();
		}
	});

	$(window).resize(function () {
		if ($('.lg-current img.lg-object.lg-image').length != 0) {
			setTimeout(function () { // it's for correct offset position
				window.main.lightGallery.calculatePrevArrowLightGallery();
				window.main.lightGallery.calculateNextArrowLightGallery();
				window.main.lightGallery.calculatreCloseButtonLightGallery();
			}, 100);
		}
	});

	$('.block-reviews__images-block').on('onAfterSlide.lg', function () {
		setTimeout(function () { // it's for correct offset position
			window.main.lightGallery.calculatePrevArrowLightGallery();
			window.main.lightGallery.calculateNextArrowLightGallery();
			window.main.lightGallery.calculatreCloseButtonLightGallery();
		}, 100);
	});

	$('.block-reviews__images-block').on('onBeforeOpen.lg', function () {
		$('.lg-actions .lg-prev').css('opacity', '0');
		$('.lg-actions .lg-next').css('opacity', '0');
		$('.lg-toolbar .lg-close').css('opacity', '0');
	});

	$('.block-reviews__images-block').on('onAfterOpen.lg', function () {
		setTimeout(function () { // it's for correct offset position
			window.main.lightGallery.calculatePrevArrowLightGallery();
			window.main.lightGallery.calculateNextArrowLightGallery();
			window.main.lightGallery.calculatreCloseButtonLightGallery();
		}, 600);
	});

})();
'use strict';

(function () {

	$('.subscribe__form, .business-cooperation').on('submit', function (e) {
		e.preventDefault();
		var form = $(this);
		var button = form.find('.subscribe__button, [type="submit"]');
		var email = form.find('input[name="email"]');
		var phone = form.find('input[name="phone"]');
		var str = form.serialize();
		var url = form.attr('action');
		var data = str;
		window.validate.main.validateViaPattern(email, window.validate.main.PATTERN_VALIDATE.EMAIL);
		if (phone.length > 0) {
			window.validate.main.validateViaPattern(phone, window.validate.main.PATTERN_VALIDATE.PHONE);
		}
		if (!email.hasClass('error') && !phone.hasClass('error')) {
			$.ajax({
				type: 'POST',
				url: url,
				data: data,
				beforeSend: function () {
					button.prop('disabled', true).addClass('disabled');
				},
				success: function (data) {
					var json = JSON.parse(data);
					var messages = '';
					if (json.message !== 'undefined' && json.message !== undefined && json.message.length !== 0) {
						messages = json.message;
					}
					if (json.messages !== 'undefined' && json.messages !== undefined && json.messages.length !== 0) {
						for (var i = 0; i < json.messages.length; i++) {
							messages += json.messages[i].message + '<br>';
						}
					}
					window.util.showSystemModal(messages);
					button.prop('disabled', false).removeClass('disabled');
				},
				error: function (thrownError) {
					button.prop('disabled', false).removeClass('disabled');
					window.util.showSystemModal('Status: ' + thrownError.status + ' Text: ' + thrownError.statusText);
				}
			});
		}
	});

})();